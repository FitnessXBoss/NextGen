<UserControl x:Class="NextGen.src.UI.Views.UserControls.AddCustomerDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:mc="http://schemas.microsoft.com/markup-compatibility/2006" FontFamily="noto">
    <UserControl.Resources>
        <!-- Определение стиля для ListBox в Popup -->
        <Style TargetType="ListBox" x:Key="PopupListBoxStyle">
            <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
            <!-- Цвет фона ListBox -->
            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
            <!-- Цвет границы ListBox -->
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
        <!-- Определение стиля для элементов ListBox -->
        <Style TargetType="ListBoxItem">
            <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
                    <!-- Цвет фона для выбранного элемента -->
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                    <!-- Цвет текста для выбранного элемента -->
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignHover}"/>
                    <!-- Цвет фона при наведении -->
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                    <!-- Цвет текста при наведении -->
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Margin="20">
        <materialDesign:DialogHost Identifier="RootDialog">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock Text="Добавить нового клиента" FontSize="20" FontWeight="Bold" Margin="0,0,0,20" Grid.ColumnSpan="2" Grid.Row="0"/>

                <TextBox Width="200" Margin="0,5,10,10" 
                         Text="{Binding CustomerFirstName, UpdateSourceTrigger=PropertyChanged}" 
                         Style="{StaticResource MaterialDesignOutlinedTextBox}" 
                         materialDesign:HintAssist.Hint="Имя клиента" Grid.Column="0" Grid.Row="1"/>

                <TextBox Width="200" Margin="10,5,0,10" 
                         Text="{Binding CustomerLastName, UpdateSourceTrigger=PropertyChanged}" 
                         Style="{StaticResource MaterialDesignOutlinedTextBox}" 
                         materialDesign:HintAssist.Hint="Фамилия клиента" Grid.Column="1" Grid.Row="1"/>

                <DatePicker Width="200" Margin="0,5,10,10"
                            SelectedDate="{Binding CustomerDateOfBirth, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource MaterialDesignOutlinedDatePicker}"
                            materialDesign:HintAssist.FloatingOffset="0,-22"
                            materialDesign:HintAssist.Hint="Дата рождения клиента" Grid.Column="0" Grid.Row="2"/>

                <xctk:MaskedTextBox Width="200" Margin="10,5,0,10" 
                            Text="{Binding CustomerPassportNumber, UpdateSourceTrigger=PropertyChanged}" 
                            Mask="0000 000000"
                            Style="{StaticResource MaterialDesignOutlinedTextBox}" 
                            materialDesign:HintAssist.Hint="Паспорт клиента" 
                            Grid.Column="1" Grid.Row="2"/>

                <Grid Width="200" Margin="0,5,10,10" Grid.Column="0" Grid.Row="3">
                    <TextBox x:Name="emailTextBox" Text="{Binding EmailInput, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                             Style="{StaticResource MaterialDesignOutlinedTextBox}" 
                             materialDesign:HintAssist.Hint="Email клиента" 
                             Background="Transparent"
                             Padding="15,0,0,0"
                             LostFocus="EmailTextBox_LostFocus"/>
                    <TextBlock Text="{Binding DisplayedEmail}" Foreground="Gray" IsHitTestVisible="False" 
                               VerticalAlignment="Center" HorizontalAlignment="Left"
                               Margin="16,0,0,0" Padding="0" Panel.ZIndex="-1"/>
                </Grid>

                <Popup IsOpen="{Binding IsDropDownOpen}" PlacementTarget="{Binding ElementName=emailTextBox}" StaysOpen="False">
                    <ListBox ItemsSource="{Binding EmailSuggestions}" SelectedItem="{Binding SelectedEmailSuggestion, Mode=TwoWay}" 
                             Width="{Binding ActualWidth, ElementName=emailTextBox}" MaxHeight="100" Style="{StaticResource PopupListBoxStyle}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" Padding="5"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Popup>

                <xctk:MaskedTextBox Width="200" Margin="10,5,0,10" 
                            Text="{Binding CustomerPhone, UpdateSourceTrigger=PropertyChanged}" 
                            Mask="+7(000) 000-0000"
                            Style="{StaticResource MaterialDesignOutlinedTextBox}" 
                            materialDesign:HintAssist.Hint="Телефон клиента" 
                            Grid.Column="1" Grid.Row="3"/>

                <Grid  Height="50" Margin="0,5,0,10" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" >
                    <TextBox x:Name="addressTextBox" Text="{Binding AddressInput, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                             Style="{StaticResource MaterialDesignOutlinedTextBox}" 
                             materialDesign:HintAssist.Hint="Адрес клиента" 
                             Background="Transparent"
                             Padding="15,0,0,0"
                             LostFocus="AddressTextBox_LostFocus"/>
                    <TextBlock Text="{Binding DisplayedAddress}" Foreground="Gray" IsHitTestVisible="False" 
                               VerticalAlignment="Center" HorizontalAlignment="Left" 
                               Margin="16,0,0,0" Padding="0,0,0,0" Panel.ZIndex="-1"/>
                </Grid>

                <Popup IsOpen="{Binding IsAddressDropDownOpen}" PlacementTarget="{Binding ElementName=addressTextBox}" StaysOpen="False">
                    <ListBox ItemsSource="{Binding AddressSuggestions}" SelectedItem="{Binding SelectedAddressSuggestion, Mode=TwoWay}" 
                             Width="{Binding ActualWidth, ElementName=addressTextBox}" MaxHeight="100" Style="{StaticResource PopupListBoxStyle}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" Padding="5"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Popup>

                <StackPanel Grid.Column="0" Grid.Row="5" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Content="Добавить" 
                            Command="{Binding AddCustomerCommand}" 
                            IsEnabled="{Binding IsFormValid}"
                            Style="{StaticResource MaterialDesignRaisedButton}" 
                            Margin="0,20,10,0" Width="110"/>

                    <Button Content="Закрыть" 
                            Command="{Binding CloseDialogCommand}" 
                            Style="{StaticResource MaterialDesignRaisedButton}" 
                            Margin="0,20,0,0" Cursor="Hand" Width="110"/>
                </StackPanel>
            </Grid>
        </materialDesign:DialogHost>
    </Grid>
</UserControl>
